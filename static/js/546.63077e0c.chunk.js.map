{"version":3,"file":"static/js/546.63077e0c.chunk.js","mappings":"yJACA,QAA0B,yBAA1B,EAAoE,gCAApE,EAAwH,mCAAxH,EAAuK,2BAAvK,EAAkO,+CAAlO,EAAgT,8CAAhT,EAA4X,6CCA5X,EAAuB,mB,qBCEvB,MAQA,EARcA,IAENC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAO,YAAWC,OAAGJ,EAAUK,QAAUC,UAAWC,EAAeC,SACvER,EAAUS,WCLvB,EAA0B,yBAA1B,EAAsE,kCCStE,EARiBC,IAETT,EAAAA,EAAAA,KAAA,OAAMK,UAAWK,EAAqBH,SACjCE,EAAaE,UCK1B,EARmBF,IAEXT,EAAAA,EAAAA,KAAA,OAAMK,UAAWK,EAA8BH,SAC1CE,EAAaE,U,sBCG1B,MAyBMC,EAAkBC,IAEhBb,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,SAAWC,IAAcH,EAAMI,WAAWD,EAASE,eAAe,EAAEX,SACrEY,IAAA,IAAE,aAAEC,GAAaD,EAAA,OACdE,EAAAA,EAAAA,MAAA,QAAMN,SAAUK,EAAcf,UAAWiB,EAA0Cf,SAAA,EAC/EP,EAAAA,EAAAA,KAACuB,EAAAA,GAAK,CAACC,SAAUC,EAAAA,EAAUC,YAAY,qBAAqBC,UAAW,WAAYC,KAAM,iBAAkBvB,UAAWiB,KACtHtB,EAAAA,EAAAA,KAAA,UAAQK,UAAWiB,MAChB,IAMvB,EAtCiBT,IAEb,IAIIgB,EAAgBhB,EAAMd,UAAU+B,KAAKC,IAAS/B,EAAAA,EAAAA,KAAA,MAAAO,UAAIP,EAAAA,EAAAA,KAACgC,EAAI,CAACxB,SAAUuB,EAAKvB,SAAUJ,OAAQ2B,EAAK3B,aAE9F6B,EAAmBpB,EAAMJ,aAAaqB,KAAKnB,IAC1B,IAAjBA,EAAQuB,QAAgBlC,EAAAA,EAAAA,KAAA,OAAKK,UAAWiB,EAAuBf,UAACP,EAAAA,EAAAA,KAACmC,EAAS,CAACxB,QAASA,EAAQA,aAAkBX,EAAAA,EAAAA,KAACoC,EAAO,CAACzB,QAASA,EAAQA,YAG5I,OACIU,EAAAA,EAAAA,MAAA,OAAKhB,UAAWiB,EAAqBf,SAAA,EACjCP,EAAAA,EAAAA,KAAA,MAAIK,UAAWiB,EAA4Bf,SACtCsB,KAELR,EAAAA,EAAAA,MAAA,OAAKhB,UAAWiB,EAA+Bf,SAAA,CAC1C0B,GACDjC,EAAAA,EAAAA,KAACY,EAAc,CAACK,WAjBHoB,IACrBxB,EAAMI,WAAWoB,EAAW,SAkBtB,E,aCNd,MAEA,GAFyBC,E,OAAAA,KAAQC,EAAAA,EAAAA,KAhBVC,IACZ,CACHzC,UAAWyC,EAAMC,eAAe1C,UAChCU,aAAc+B,EAAMC,eAAehC,aACnCiC,eAAgBF,EAAMC,eAAeC,mBAInBC,IAChB,CACF1B,WAAaoB,IACTM,GAASC,EAAAA,EAAAA,GAAwBP,GAAY,MAKsBQ,EAAAA,EAAtDP,CAAwEQ,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Chat/Chat.module.css?a2cb","components/Dialogs/Chat/Chat.jsx","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/MyMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__nnJXh\",\"dialogs__chats\":\"Dialogs_dialogs__chats__XDtbb\",\"dialogs__messages\":\"Dialogs_dialogs__messages__ydLVj\",\"mymessage\":\"Dialogs_mymessage__p07kG\",\"dialogs__addMessages_textarea\":\"Dialogs_dialogs__addMessages_textarea__A-aVm\",\"dialogs__messages_addMessage\":\"Dialogs_dialogs__messages_addMessage__8LCOj\",\"dialogs__addMessages_button\":\"Dialogs_dialogs__addMessages_button__7W2uD\"};","// extracted by mini-css-extract-plugin\nexport default {\"chat\":\"Chat_chat__bBAv-\"};","import styleChat from './Chat.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Chat = (chatsData) => {\r\n    return(\r\n        <NavLink to={`${'/dialogs/'}${chatsData.userid}`} className={styleChat.chat}>\r\n            {chatsData.username}\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default Chat","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__HYghZ\",\"mymessage__inner\":\"Message_mymessage__inner__0Dy3x\"};","import styleMessage from './Message.module.css'\r\n\r\nconst Message = (messagesData) => {\r\n    return(\r\n        <div  className={styleMessage.message}>\r\n            {messagesData.message}\r\n        </div>       \r\n    )\r\n} \r\n\r\nexport default Message","import styleMessage from './Message.module.css'\r\n\r\nconst MyMessage = (messagesData) => {\r\n    return(\r\n        <div  className={styleMessage.mymessage__inner}>\r\n            {messagesData.message}\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default MyMessage","import React from 'react'\r\nimport styleDialogs from './Dialogs.module.css'\r\nimport Chat from './Chat/Chat'\r\nimport Message from './Message/Message'\r\nimport MyMessage from './Message/MyMessage'\r\nimport { Field, Form } from 'react-final-form'\r\nimport { required } from '../../utilits/validators'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let onAddMessageClick = (newMessage) => {\r\n        props.addMessage(newMessage)\r\n    }\r\n\r\n    let chatsElements = props.chatsData.map((chat) => <li><Chat username={chat.username} userid={chat.userid}/></li>)\r\n\r\n    let messagesElements = props.messagesData.map((message) => \r\n        message.isMine===true ? <div className={styleDialogs.mymessage}><MyMessage message={message.message}/></div> :<Message message={message.message}/>\r\n    )\r\n\r\n    return(\r\n        <div className={styleDialogs.dialogs}>\r\n            <ul className={styleDialogs.dialogs__chats}>\r\n                {chatsElements}\r\n            </ul>\r\n            <div className={styleDialogs.dialogs__messages}>\r\n                {messagesElements}\r\n                <AddMessageForm addMessage={onAddMessageClick} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <Form onSubmit={(formData) => {props.addMessage(formData.newMessageBody)}}>\r\n            {( { handleSubmit} ) => (\r\n                <form onSubmit={handleSubmit} className={styleDialogs.dialogs__messages_addMessage}>\r\n                    <Field validate={required} placeholder='Enter your message' component={'textarea'} name={'newMessageBody'} className={styleDialogs.dialogs__addMessages_textarea}></Field>\r\n                    <button className={styleDialogs.dialogs__addMessages_button}></button>\r\n                </form>\r\n            )}\r\n        </Form>   \r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport { addMessageActionCreator} from '../../redux/dialogsReducer'\r\nimport { connect } from 'react-redux'\r\nimport Dialogs from './Dialogs'\r\nimport { withAuthReirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        chatsData: state.dialogsReducer.chatsData,\r\n        messagesData: state.dialogsReducer.messagesData,\r\n        newMessageText: state.dialogsReducer.newMessageText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addMessage: (newMessage) => {\r\n            dispatch(addMessageActionCreator(newMessage))\r\n        },\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose(connect(mapStateToProps, mapDispatchToProps), withAuthReirect )(Dialogs)\r\n\r\nexport default DialogsContainer"],"names":["chatsData","_jsx","NavLink","to","concat","userid","className","styleChat","children","username","messagesData","styleMessage","message","AddMessageForm","props","Form","onSubmit","formData","addMessage","newMessageBody","_ref","handleSubmit","_jsxs","styleDialogs","Field","validate","required","placeholder","component","name","chatsElements","map","chat","Chat","messagesElements","isMine","MyMessage","Message","newMessage","compose","connect","state","dialogsReducer","newMessageText","dispatch","addMessageActionCreator","withAuthReirect","Dialogs"],"sourceRoot":""}